steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.15.1'
  displayName: 'Install Node.js'

- script: |
    npm i -g yarn
  displayName: 'preinstall'

- script: |
    export CXX="g++-4.9" CC="gcc-4.9" DISPLAY=:10
    sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
    sudo chmod +x /etc/init.d/xvfb
    sudo update-rc.d xvfb defaults
    sudo service xvfb start
    # sh -e /etc/init.d/xvfb start
    # sleep 3
  displayName: 'Linux preinstall'
  condition: eq(variables['Agent.OS'], 'Linux')

- script: |
    yarn
  displayName: 'Install'

- script: |
    yarn gulp electron-x64
  displayName: Download Electron

- script: |
    yarn gulp hygiene
  displayName: Run Hygiene Checks

- script: |
    yarn tslint
  displayName: 'Run TSLint'

- script: |
    yarn strict-null-check
  displayName: 'Run Strict Null Check'

- script: |
    yarn compile
  displayName: 'Compile'

- script: |
    DISPLAY=:10 ./scripts/test.sh --reporter mocha-junit-reporter
  displayName: 'Tests'
  condition: eq(variables['Agent.OS'], 'Linux')

- script: |
    DISPLAY=:10 ./scripts/test.sh --reporter mocha-junit-reporter --coverage
  displayName: 'Tests'
  condition: ne(variables['Agent.OS'], 'Linux')

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/test-results.xml'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: $(System.DefaultWorkingDirectory)/.build/coverage/cobertura-coverage.xml
    reportDirectory: $(System.DefaultWorkingDirectory)/.build/coverage/lcov-reports
  condition: ne(variables['Agent.OS'], 'Linux')
